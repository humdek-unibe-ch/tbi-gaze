---
API: 3
OpenSesame: 4.0.0a35
Platform: nt
---
set width 1024
set uniform_coordinates yes
set title "New experiment"
set subject_parity even
set subject_nr 0
set start experiment
set sound_sample_size -16
set sound_freq 48000
set sound_channels 2
set sound_buf_size 1024
set round_decimals 2
set height 768
set fullscreen no
set form_clicks no
set foreground white
set font_underline no
set font_size 18
set font_italic no
set font_family mono
set font_bold no
set experiment_path "C:/Users/tpf/TBI-tobii_eye_tracker_gaze/sample"
set disable_garbage_collection yes
set description "The main experiment item"
set coordinates uniform
set compensation 0
set canvas_backend psycho
set background black

define sketchpad ThankYou
	set duration keypress
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=True text="Thank You!" x=0 y=0 z_index=0

define sequence experiment
	set flush_keyboard yes
	set description "Runs a number of items in sequence"
	run welcome always
	run gaze_start always
	run gaze_calibration always
	run gaze_recording_enable always
	run gaze_drift_compensation True
	run new_advanced_delay always
	run gaze_recording_disable always
	run gaze_stop always
	run ThankYou True

define inline_script gaze_calibration
	set description "Executes Python code"
	___run__
	import subprocess
	
	print("running custom calibration")
	subprocess.run([f"{gazeAppPath}\\GazeControl.exe", "/command", "CUSTOM_CALIBRATE"])
	print("custom calibration done")
	__end__
	set _prepare ""

define inline_script gaze_drift_compensation
	set description "Executes Python code"
	___run__
	import subprocess
	
	print("enable gaze recording")
	subprocess.run([f"{gazeAppPath}\\GazeControl.exe", "/command", "DRIFT_COMPENSATION"])
	__end__
	set _prepare ""

define inline_script gaze_initialisation
	set description "Executes Python code"
	___run__
	__end__
	set _prepare ""

define inline_script gaze_recording_disable
	set description "Executes Python code"
	___run__
	import subprocess
	
	print("disable gaze recording")
	subprocess.run([f"{gazeAppPath}\\GazeControl.exe", "/command", "GAZE_RECORDING_ENABLE"])
	__end__
	set _prepare ""

define inline_script gaze_recording_enable
	set description "Executes Python code"
	___run__
	import subprocess
	
	print("enable gaze recording")
	subprocess.run([f"{gazeAppPath}\\GazeControl.exe", "/command", "GAZE_RECORDING_ENABLE"])
	__end__
	set _prepare ""

define inline_script gaze_start
	set description "Executes Python code"
	___run__
	import subprocess, time
	
	print("start gaze process")
	subprocess.Popen([f"{gazeAppPath}\\Gaze.exe", "/subject", f"{var.get(u'subject_nr')}", "/outputPath", f"{var.get(u'experiment_path')}"])
	time.sleep(3)
	__end__
	___prepare__
	gazeAppPath = "C:\\Users\\tpf\\TBI-tobii_eye_tracker_gaze\\build"
	print(f"use path {gazeAppPath}")
	__end__

define inline_script gaze_stop
	set description "Executes Python code"
	___run__
	import subprocess
	
	print("stop gaze process")
	subprocess.run([f"{gazeAppPath}\\GazeControl.exe", "/command", "TERMINATE"])
	__end__
	set _prepare ""

define advanced_delay new_advanced_delay
	set jitter_mode Uniform
	set jitter 0
	set duration 5000
	set description "Waits for a specified duration"

define advanced_delay new_advanced_delay_1
	set jitter_mode Uniform
	set jitter 0
	set duration 5000
	set description "Waits for a specified duration"

define sketchpad welcome
	set start_response_interval no
	set reset_variables no
	set duration keypress
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=serif font_italic=no font_size=32 html=yes show_if=always text="OpenSesame 3.3 <i>Lentiform Loewenfeld</i>" x=0 y=0 z_index=0

