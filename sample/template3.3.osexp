---
API: 2.1
OpenSesame: 3.3.14
Platform: nt
---
set width 2560
set uniform_coordinates yes
set title "New experiment"
set subject_parity even
set subject_nr 0
set start experiment
set sound_sample_size -16
set sound_freq 48000
set sound_channels 2
set sound_buf_size 1024
set sampler_backend psycho
set round_decimals 2
set mouse_backend psycho
set keyboard_backend psycho
set height 1440
set fullscreen no
set form_clicks no
set foreground white
set font_underline no
set font_size 18
set font_italic no
set font_family mono
set font_bold no
set experiment_path "C:/Users/moiri/Documents/git-tobii_eye_tracker_gaze/sample"
set disable_garbage_collection yes
set description "The main experiment item"
set coordinates uniform
set compensation 0
set color_backend psycho
set clock_backend psycho
set canvas_backend psycho
set background black

define sketchpad ThankYou
	set duration 3
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=True text="Thank You!" x=0 y=0 z_index=0

define sequence experiment
	set flush_keyboard yes
	set description "Runs a number of items in sequence"
	run welcome always
	run gaze_start always
	run gaze_calibration always
	run gaze_validation always
	run new_loop True
	run gaze_stop always
	run ThankYou True

define inline_script gaze_calibration
	set description "Executes Python code"
	___run__
	import subprocess
	
	print("running custom calibration")
	subprocess.run([f"{gazeAppPath}\\GazeControl.exe", "/command", "CUSTOM_CALIBRATE"])
	print("custom calibration done")
	__end__
	set _prepare ""

define inline_script gaze_drift_compensation
	set description "Executes Python code"
	___run__
	import subprocess
	
	print("running drift compensation")
	subprocess.run([f"{gazeAppPath}\\GazeControl.exe", "/command", "DRIFT_COMPENSATION"])
	print("drift compensation done")
	__end__
	set _prepare ""

define inline_script gaze_recording_disable
	set description "Executes Python code"
	___run__
	import subprocess
	
	print("disable gaze recording")
	subprocess.run([f"{gazeAppPath}\\GazeControl.exe", "/command", "GAZE_RECORDING_ENABLE"])
	__end__
	set _prepare ""

define inline_script gaze_recording_enable
	set description "Executes Python code"
	___run__
	import subprocess
	
	print("enable gaze recording")
	subprocess.run([f"{gazeAppPath}\\GazeControl.exe", "/command", "GAZE_RECORDING_ENABLE"])
	__end__
	set _prepare ""

define inline_script gaze_start
	set description "Executes Python code"
	___run__
	import subprocess, time
	
	print("start gaze process")
	subprocess.Popen([f"{gazeAppPath}\\Gaze.exe", "/subject", f"{var.get(u'subject_nr')}", "/outputPath", f"{var.get(u'experiment_path')}"])
	time.sleep(3)
	__end__
	___prepare__
	#gazeAppPath = "\\\\130.92.158.19\\runexp\\applications\\TPF_EyeTracking\\current"
	gazeAppPath = "C:\\Users\\moiri\\Documents\\git-tobii_eye_tracker_gaze\\build"
	print(f"use path {gazeAppPath}")
	__end__

define inline_script gaze_stop
	set description "Executes Python code"
	___run__
	import subprocess
	
	print("stop gaze process")
	subprocess.run([f"{gazeAppPath}\\GazeControl.exe", "/command", "TERMINATE"])
	__end__
	set _prepare ""

define inline_script gaze_validation
	set description "Executes Python code"
	___run__
	import subprocess
	
	print("running validation")
	subprocess.run([f"{gazeAppPath}\\GazeControl.exe", "/command", "VALIDATE"])
	print("validation done")
	__end__
	set _prepare ""

define loop new_1_loop
	set source_file ""
	set source table
	set repeat 1
	set order sequential
	set description "Repeatedly runs another item"
	set cycles 3
	set continuous no
	set break_if_on_first yes
	set break_if never
	setcycle 0 label label1
	setcycle 1 label label2
	setcycle 2 label label3
	run new_1_sequence

define sequence new_1_sequence
	set flush_keyboard yes
	set description "Runs a number of items in sequence"
	run set_label True
	run new_advanced_delay True

define advanced_delay new_advanced_delay
	set jitter_mode Uniform
	set jitter 0
	set duration 1000
	set description "Waits for a specified duration"

define loop new_loop
	set source_file ""
	set source table
	set repeat 1
	set order sequential
	set description "Repeatedly runs another item"
	set cycles 3
	set continuous no
	set break_if_on_first yes
	set break_if never
	setcycle 0 trial_id 1
	setcycle 1 trial_id 2
	setcycle 2 trial_id 3
	run new_sequence

define sequence new_sequence
	set flush_keyboard yes
	set description "Runs a number of items in sequence"
	run gaze_drift_compensation True
	run set_trial_id True
	run gaze_recording_enable True
	run new_1_loop True
	run gaze_recording_disable True

define inline_script set_label
	set description "Executes Python code"
	___run__
	import subprocess
	
	label = var.get(u'label')
	print(f"set label {label}")
	subprocess.run([f"{gazeAppPath}\\GazeControl.exe", "/command", "SET_TAG", "/value", f"{label}"])
	__end__
	set _prepare ""

define inline_script set_trial_id
	set description "Executes Python code"
	___run__
	import subprocess
	
	trial_id = var.get(u'trial_id')
	print(f"set trial_id {trial_id}")
	subprocess.run([f"{gazeAppPath}\\GazeControl.exe", "/command", "SET_TRIAL_ID", "/value", f"{var.get(u'trial_id')}"])
	__end__
	set _prepare ""

define sketchpad welcome
	set start_response_interval no
	set reset_variables no
	set duration 0
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=serif font_italic=no font_size=32 html=yes show_if=always text="OpenSesame 3.3 <i>Eye Tracking</i>" x=0 y=0 z_index=0

